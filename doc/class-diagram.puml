@startuml

package "Gumbo/MyGumbo" <<Folder>> {
  class Storm<Framework provided>

  class Agenda {
    {static} +getAgendaItems(): string
    {static} -getVerjaardagen(): array
  }
  note bottom: Not available in database,\n constructed from Persoon model

  class Groep {
    +id: int
    +naam: string
    +type: string
    +email: string
    +omschrijving: string

    +personen(): Persoon[]
  }

  class Lidstatus {
    {static} +LID: int
    {static} +OUDLID: int
    {static} +ERELID: int
    {static} +BEGUNSTIGER: int
    {static} +ALID: int
    {static} +EXLID: int
    {static} +EXBEGUNSTIGER: int
    {static} +ONBEKEND: int
    ..
    +id: int
    +naam: string

    {static} +studiejaar(): int
  }

  class Log {
    +id: int
    +persoon_id: int
    +datetime: datetime
    +type: string
    +value: string

    {static} +getLogItems(aantal: int): Log[]
  }

  class Persoon {
    +id: int
    +voornaam: string
    +tussenvoegsel: string
    +achternaam: string
    +email: string
    +adres: string
    +postcode: string
    +woonplaats: string
    +wachtwoord: string
    +geboortedatum: date
    +geslacht: string
    +opmerkingen: string
    +lid_sinds: date
    +lid_tot: date
    +gumbode: bool
    +post: bool

    {static} +commit(persoon_id: int): Persoon
    {static} -validate(input: array, persoon: Persoon): System\Validator
    {static} +getMorrisLedenopbouw(): string
    ..
    +volledige_naam(): string
    +groepen(): Groep[]
    +lidstatussen(): array
    +lidstatus(): string
    +has_groep(): bool
    +has_groeptype(type: string): bool
  }

  class Rol {
    {static} +VOORZITTER: int
    ..
    +id: int
    +naam: string
  }

  class Token {
    +id: int
    +token: string
    +created_at: datetime
    +lifetime: int
    +code: string
    +persoon_id: int
    +email: string

    {static} +create(persoon_id: int, email: string, lifetime: int, code: string): bool
    {static} +forget(persoon_id: int, email: string)
    {static} +resetPassword(token: string, email: string)
  }
}

package "Current database" <<Database>> {
  class persoon_evenement {
    persoon_id: int
    evenement_id: int
    betaald: bool
    datum_inschrijven: date
    datum_betaald: date
  }
  class persoon_groep {
    persoon_id: int
    groep_id: int
    rol_id: int
  }
  class persoon_lidstatus {
    id: int
    persoon_id: int
    jaar: string
    lidstatus_id: int
  }
}

hide Storm

@enduml
